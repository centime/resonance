// Generated by CoffeeScript 1.4.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.app.controller('UsersController', function($scope) {
    $scope.users = [];
    self.port.on("names", function(channel, nicks) {
      var nick;
      $scope.users = ((function() {
        var _results;
        if (nick !== 'Resonance-bot') {
          _results = [];
          for (nick in nicks) {
            _results.push(nick);
          }
          return _results;
        }
      })());
      return $scope.$apply();
    });
    self.port.on("join", function(channel, nick) {
      if ((nick !== IRC.nick) && (nick !== 'Resonance-bot')) {
        $scope.users.push(nick);
      }
      return $scope.$apply();
    });
    self.port.on("part", function(channel, nick) {
      var user;
      $scope.users = (function() {
        var _i, _len, _ref, _results;
        _ref = $scope.users;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          user = _ref[_i];
          if (user !== nick) {
            _results.push(user);
          }
        }
        return _results;
      })();
      return $scope.$apply();
    });
    $scope.mute = function(user) {
      $scope.$parent.mutedUser.push(user);
      return $scope.$parent.$broadcast('mute', user);
    };
    $scope.isMute = function(user) {
      return __indexOf.call($scope.$parent.mutedUser, user) >= 0;
    };
    $scope.unMute = function(user) {
      $scope.$parent.mutedUser.splice($scope.$parent.mutedUser.indexOf(user), 1);
      return $scope.$parent.$broadcast('unMute', user);
    };
    return $scope.startPm = function(user) {
      self.port.emit('startPmUser', user);
      return $scope.$parent.display = 4;
    };
  });

}).call(this);
