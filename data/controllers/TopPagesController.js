// Generated by CoffeeScript 1.4.0
(function() {

  window.resonance.controller("TopPagesController", function($scope) {
    var alreadyRequestedTopPage, numberOfLines;
    $scope.topPages = [];
    $scope.query = '';
    $scope.index = 0;
    $scope.total = 0;
    self.port.on('topPages', function(topPages) {
      $scope.topPages = topPages;
      return $scope.$apply();
    });
    self.port.on('topPagesMetaData', function(query, index, total) {
      $scope.query = query;
      $scope.index = Number(index);
      $scope.total = Number(total);
      return $scope.$apply();
    });
    $scope.getTopPages = function() {
      return self.port.emit('getTopPages', $scope.index, $scope.query);
    };
    alreadyRequestedTopPage = false;
    $scope.displayTopPages = function(displayTopPages) {
      if (displayTopPages) {
        if (!alreadyRequestedTopPage) {
          self.port.emit('getTopPages', $scope.index, $scope.query);
          alreadyRequestedTopPage = true;
        }
      } else {
        alreadyRequestedTopPage = false;
      }
      angular.element('toppages_resonance input').focus();
      return displayTopPages;
    };
    $scope.previous = function() {
      if ($scope.index > 0) {
        $scope.index--;
        return self.port.emit('getTopPages', $scope.index, $scope.query);
      }
    };
    $scope.next = function() {
      if ($scope.index + 1 < $scope.total) {
        $scope.index++;
        return self.port.emit('getTopPages', $scope.index, $scope.query);
      }
    };
    return numberOfLines = function() {
      var divheight, lineheight;
      divheight = $('toppages_resonance > ul').height();
      lineheight = $('toppages_resonance li').css('line-height');
      return Math.floor(divheight / parseInt(lineheight)) - 2;
    };
  });

}).call(this);
